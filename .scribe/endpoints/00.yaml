name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Регистрация
      description: 'Для регистрации пользователя необходимо передать `first_name`, `last_name`, `email`, `password` в теле запроса.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Имя. validation.max.'
        required: true
        example: Иван
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Фамилия. validation.max.'
        required: true
        example: Иванов
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Email. validation.email validation.max.'
        required: true
        example: ivan.ivanov@test.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Пароль. validation.max.'
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: Иван
      last_name: Иванов
      email: ivan.ivanov@test.org
      password: test
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Registration is successful\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: "{\r\n    \"message\": \"validation.email\",\r\n    \"errors\": {\r\n        \"email\": [\r\n            \"validation.email\"\r\n        ]\r\n    }\r\n}"
        headers: []
        description: 'validation fail'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Авторизация
      description: |-
        Для прохождения аутентификации необходимо указать `email` и `password` в теле запроса.

        После пройденной аутентификации создается accessToken.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email. validation.email validation.max.'
        required: true
        example: ivan.ivanov@test.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Пароль. validation.max.'
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: ivan.ivanov@test.org
      password: test
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Authorization is successful\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: "{\r\n    \"message\": \"Invalid email or password\"\r\n}"
        headers: []
        description: 'invalid email or password'
        custom: []
      -
        status: 422
        content: "{\r\n    \"message\": \"validation.email\",\r\n    \"errors\": {\r\n        \"email\": [\r\n            \"validation.email\"\r\n        ]\r\n    }\r\n}"
        headers: []
        description: 'validation fail'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Список пользователей'
      description: |-
        Отдается порционно по 20 пользователей.

        Для получения следующих страниц необходимо передать `page` с номером страницы.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Номер страницы.'
        required: false
        example: '2'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: '2'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "[\r\n    {\r\n        \"id\": 1,\r\n        \"first_name\": \"Иван\",\r\n        \"last_name\": \"Иванов\",\r\n        \"email\": \"ivan.ivanov@test.org\"\r\n    }\r\n]"
        headers: []
        description: success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/chats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получение списка чатов'
      description: |-
        Отдается порционно по 20 чатов.

        Для получения следующих страниц необходимо передать `page` с номером страницы.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Номер страницы.'
        required: false
        example: '2'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: '2'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "[\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Иван Иванов\",\r\n        \"created_at\": \"2024-05-16T19:09:48.000000Z\",\r\n        \"updated_at\": \"2024-05-16T19:09:48.000000Z\",\r\n        \"users\": [\r\n            {\r\n                \"id\": 1,\r\n                \"first_name\": \"Иван\",\r\n                \"last_name\": \"Иванов\",\r\n                \"email\": \"ivan.ivanov@test.org\"\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"first_name\": \"Николай\",\r\n                \"last_name\": \"Николаев\",\r\n                \"email\": \"nikolay.nikolayev@test.org\"\r\n            }\r\n        ]\r\n    }\r\n]"
        headers: []
        description: success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/chats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Создание чата'
      description: |-
        Создается чат с передаваемым пользователем, если его не существует.

        Для создания чата с пользователем необходимо в параметрах передать `user_id`.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: user_id.
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Chat created\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: "{\r\n    \"message\": \"User not found\"\r\n}"
        headers: []
        description: 'user not found'
        custom: []
      -
        status: 409
        content: "{\r\n    \"message\" : \"Chat already exist\"\r\n}"
        headers: []
        description: 'chat already exist'
        custom: []
      -
        status: 409
        content: "{\r\n    \"message\" : \"It is impossible to create a chat with yourself\"\r\n}"
        headers: []
        description: 'chat with yourself'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/chats/{chatId}/messages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получение списка сообщений'
      description: |-
        Отдается порционно по 20 чатов.

        Для получения следующих страниц необходимо передать `page` с номером страницы.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      chatId:
        name: chatId
        description: ''
        required: true
        example: '04423903'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      chatId: '04423903'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "[\r\n    {\r\n        \"id\": 6,\r\n        \"chat_id\": 2,\r\n        \"text\": \"test\",\r\n        \"created_at\": \"2024-05-16T20:35:59.000000Z\",\r\n        \"updated_at\": \"2024-05-16T20:35:59.000000Z\"\r\n    }\r\n]"
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: "{\r\n    \"message\": \"Chat not found\"\r\n}"
        headers: []
        description: 'chat not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/chats/{chatId}/messages'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Создание сообщения'
      description: |-
        Создается сообщение в чате.

        Необходимо указать в URI `chatId` и передать `text`в теле запроса.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      chatId:
        name: chatId
        description: ''
        required: true
        example: '9'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      chatId: '9'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      text:
        name: text
        description: 'Text. validation.max.'
        required: true
        example: 'Тестовое сообщение'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      text: 'Тестовое сообщение'
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Message created\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: "{\r\n    \"message\": \"Chat not found\"\r\n}"
        headers: []
        description: 'chat not found'
        custom: []
      -
        status: 422
        content: "{\r\n    \"message\": \"validation.max\",\r\n    \"errors\": {\r\n        \"text\": [\r\n            \"validation.max\"\r\n        ]\r\n    }\r\n}"
        headers: []
        description: 'validation fail'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
