name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Регистрация
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Имя. validation.max.'
        required: true
        example: Иван
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Фамилия. validation.max.'
        required: true
        example: Иванов
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Email. validation.email validation.max.'
        required: true
        example: ivan.ivanov@test.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Пароль. validation.max.'
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: Иван
      last_name: Иванов
      email: ivan.ivanov@test.org
      password: test
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Registration is successful\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: "{\r\n    \"message\": \"validation.email\",\r\n    \"errors\": {\r\n        \"email\": [\r\n            \"validation.email\"\r\n        ]\r\n    }\r\n}"
        headers: []
        description: 'validation fail'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Авторизация
      description: 'После пройденной аутентификации создается accessToken'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email. validation.email validation.max.'
        required: true
        example: ivan.ivanov@test.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Пароль. validation.max.'
        required: true
        example: test
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: ivan.ivanov@test.org
      password: test
    fileParameters: []
    responses:
      -
        status: 200
        content: "{\r\n    \"message\": \"Authorization is successful\"\r\n}"
        headers: []
        description: success
        custom: []
      -
        status: 403
        content: "{\r\n    \"message\": \"Invalid email or password\"\r\n}"
        headers: []
        description: 'invalid email or password'
        custom: []
      -
        status: 422
        content: "{\r\n    \"message\": \"validation.email\",\r\n    \"errors\": {\r\n        \"email\": [\r\n            \"validation.email\"\r\n        ]\r\n    }\r\n}"
        headers: []
        description: 'validation fail'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Список пользователей'
      description: |-
        Отдается порционно по 20 пользователей.
        Для получения следующих страниц, необходимо передать `page` с номером страницы.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Номер страницы.'
        required: false
        example: '2'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: '2'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "[\r\n    {\r\n        \"id\": 1,\r\n        \"first_name\": \"Иван\",\r\n        \"last_name\": \"Иванов\",\r\n        \"email\": \"ivan.ivanov@test.org\"\r\n    }\r\n]"
        headers: []
        description: success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
